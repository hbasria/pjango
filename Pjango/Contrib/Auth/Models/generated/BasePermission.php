<?php

/**
 * BasePermission
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $codename
 * @property integer $content_type_id
 * @property ContentType $ContentType
 * @property Doctrine_Collection $Groups
 * @property Doctrine_Collection $PermissionGroups
 * @property Doctrine_Collection $Users
 * @property Doctrine_Collection $PermissionUsers
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePermission extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('auth_permission');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('codename', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('content_type_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ContentType', array(
             'local' => 'content_type_id',
             'foreign' => 'id'));

        $this->hasMany('Group as Groups', array(
             'refClass' => 'GroupPermission',
             'local' => 'permission_id',
             'foreign' => 'group_id'));

        $this->hasMany('GroupPermission as PermissionGroups', array(
             'local' => 'id',
             'foreign' => 'permission_id'));

        $this->hasMany('User as Users', array(
             'refClass' => 'UserPermission',
             'local' => 'permission_id',
             'foreign' => 'user_id'));

        $this->hasMany('UserPermission as PermissionUsers', array(
             'local' => 'id',
             'foreign' => 'permission_id'));
    }
}