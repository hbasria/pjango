<?php

/**
 * Post
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Post extends BasePost
{
	const TYPE_POST = "Post";
	const TYPE_PAGE = "Pages";
	
	const STATUS_DRAFT = 'draft';
	const STATUS_PUBLISHED = 'published';
	const STATUS_PRIVATE = 'private';
	const STATUS_ARCHIVE = 'archive';
	
	public static function get_content_type_id() {
	    return ContentType::get_for_model("Post")->id;
	}	
	
	public static function get_status_choices() {
		$choices = array(
    		self::STATUS_DRAFT=>pjango_gettext("Draft"),
    		self::STATUS_PUBLISHED=>pjango_gettext("Published"),
    		self::STATUS_PRIVATE=>pjango_gettext("Private"),
    		self::STATUS_ARCHIVE=>pjango_gettext("Archive"));
	
		return $choices;
	}	
	
	public static function findBySlug($slug, $postType = 'Post') {

		$p = Doctrine_Query::create()
			->from('Post o')
			->leftJoin('o.Translation t')
			->where('o.site_id = ? AND o.post_type = ? AND t.slug = ?',array(SITE_ID, $postType, $slug))
			->fetchOne();		
		
		if($p){
		    return Doctrine_Query::create()
    		    ->from('Post o')
    		    ->leftJoin('o.Translation t')
    		    ->where('o.id = ? ',array($p->id))
    		    ->fetchOne();
		}else {
			return false;
		}
	}
	
	public function get_absolute_url() {
		$siteUrl = pjango_ini_get('SITE_URL');
		return sprintf('%s/%s/%s', $siteUrl, strtolower($this->post_type), $this->get_slug());
	}	
	
	public function get_ajax_url() {
	    $siteUrl = pjango_ini_get('SITE_URL');
	    return sprintf('%s/ajax/%s/%s', $siteUrl, $this->post_type, $this->get_slug());
	}	
	
	function get_title() {
		return translation($this->Translation, 'title');		
	}
	
	public function get_file($mimeTypes = array()) {
		
		if($this->post_type == 'Post'){
			$contentType = ContentType::get_for_model('Post','Core');
		}else {
			$contentType = ContentType::get_for_model('Post',$this->post_type);
		}
		
		
		$file = Doctrine_Query::create()
			->from('PjangoMedia o')
			->where('o.content_type_id = ? AND o.object_id = ?', array($contentType->id, $this->id));
	
		if(is_array($mimeTypes) && count($mimeTypes) > 0){
			$file->andWhereIn('o.file_type', $mimeTypes);
		}
			
		return $file->fetchOne();
	}	
	
	public function get_files($mimeTypes = array()) {
		if($this->post_type == 'Post'){
			$contentType = ContentType::get_for_model('Post','Core');
		}else {
			$contentType = ContentType::get_for_model('Post',$this->post_type);
		}
		
		$files = Doctrine_Query::create()
			->from('PjangoMedia o')
			->where('o.content_type_id = ? AND o.object_id = ?', array($contentType->id, $this->id));
		
		if(is_array($mimeTypes) && count($mimeTypes) > 0){
			$files->andWhereIn('o.file_type', $mimeTypes);
		}
		 
		return $files->execute();
	}	
	
	function set_title($value) {
	    return  $this->Translation[pjango_ini_get('LANGUAGE_CODE')]->title = $value;
	}	
	
	function get_slug() {
		return translation($this->Translation, 'slug');	
	}	
	
	function set_slug($value) {
	    return  $this->Translation[pjango_ini_get('LANGUAGE_CODE')]->slug = $value;
	}	
	
	function get_content() {
		return translation($this->Translation, 'content');		
	}	
	
	function set_content($value) {
	    return  $this->Translation[pjango_ini_get('LANGUAGE_CODE')]->content = $value;
	}	
	
	function get_excerpt() {
		return translation($this->Translation, 'excerpt');
	}	
	
	public function get_image_url() {
	    $image = $this->get_image();
	    
	    if($image) return $image->file_path; 
		return false;
	}	
	
	public function get_image() {
		$contentType = ContentType::get_for_model('Post', $this->post_type);
	    $image = Doctrine_Query::create()
	        ->from('PjangoMedia o')
	        ->where('o.is_default = 1 AND o.content_type_id = ? AND o.object_id = ?', array($contentType->id, $this->id))
	        ->limit(1)
	        ->fetchOne();
	    
	    if(!$image){
	    	$image = Doctrine_Query::create()
		    	->from('PjangoMedia o')
		    	->where('o.content_type_id = ? AND o.object_id = ?', array($contentType->id, $this->id))
		    	->limit(1)
		    	->fetchOne();
	    }
	    
	    return $image;
	}	
	
	public function get_images() {
	    $contentType = ContentType::get_for_model('Post', $this->post_type);
	    $images = Doctrine_Query::create()
    	    ->from('PjangoMedia o')
    	    ->where('o.content_type_id = ? AND o.object_id = ?', array($contentType->id, $this->id))
    	    ->execute();
	    
	    return $images;
	}
	
	public function get_images_count() {
	    $images = $this->get_images();
	    
	    if($images) return count($images);
	    else return 0;
	}	
	
	function get_category_names() {
		$retValArr = array();
		foreach ($this->Categories as $categoryItem) {
			$retValArr[] = $categoryItem->get_name();
		}
		
		return  implode(', ', $retValArr);
	}	
	
	function get_category_slugs() {
	    $retValArr = array();
	    foreach ($this->Categories as $categoryItem) {
	        $retValArr[] = $categoryItem->get_slug();
	    }
	
	    return  implode(' ', $retValArr);
	}	
	
	
	public function fromMyArray($arr = array()){
		$lng = pjango_ini_get('LANGUAGE_CODE');
		
		if ($this->id > 0){
		    $arr['Translation'][$lng]['id'] = $this->id;
		}
		
		if(isset($arr['title'])) $arr['Translation'][$lng]['title'] = $arr['title'];
		if(isset($arr['content'])) $arr['Translation'][$lng]['content'] = $arr['content'];
		if(isset($arr['excerpt'])) $arr['Translation'][$lng]['excerpt'] = $arr['excerpt'];
		if(isset($arr['slug'])) $arr['Translation'][$lng]['slug'] = $arr['slug'];
		
		$this->fromArray($arr);		
		return $arr;
	}
	
	public function toMyArray(){
		$lng = pjango_ini_get('LANGUAGE_CODE');
	
		$retVal = $this->toArray();
		$retVal['title'] = $this->Translation[$lng]->title;
		$retVal['content'] = $this->Translation[$lng]->content;
		$retVal['excerpt'] = $this->Translation[$lng]->excerpt;
		$retVal['slug'] = $this->Translation[$lng]->slug;
		return $retVal;
	}	
}