<?php

/**
 * BasePost
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $title
 * @property string $content
 * @property string $excerpt
 * @property string $status
 * @property string $comment_status
 * @property string $ping_status
 * @property string $post_password
 * @property string $to_ping
 * @property string $pinged
 * @property string $post_type
 * @property integer $comment_count
 * @property integer $weight
 * @property string $template
 * @property integer $parent_id
 * @property integer $updated_by
 * @property integer $created_by
 * @property integer $site_id
 * @property Site $Site
 * @property User $CreatedBy
 * @property User $UpdatedBy
 * @property Post $Parent
 * @property Doctrine_Collection $Categories
 * @property Doctrine_Collection $Post
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePost extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('post');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('content', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('excerpt', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('status', 'string', 35, array(
             'type' => 'string',
             'length' => '35',
             ));
        $this->hasColumn('comment_status', 'string', 35, array(
             'type' => 'string',
             'length' => '35',
             ));
        $this->hasColumn('ping_status', 'string', 35, array(
             'type' => 'string',
             'length' => '35',
             ));
        $this->hasColumn('post_password', 'string', 128, array(
             'type' => 'string',
             'length' => '128',
             ));
        $this->hasColumn('to_ping', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('pinged', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('post_type', 'string', 35, array(
             'type' => 'string',
             'length' => '35',
             ));
        $this->hasColumn('comment_count', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('weight', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('template', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('pub_date', 'datetime', null, array(
             'type' => 'datetime',
        ));            
        $this->hasColumn('parent_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('updated_by', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('created_by', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('site_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Site', array(
             'local' => 'site_id',
             'foreign' => 'id'));

        $this->hasOne('User as CreatedBy', array(
             'local' => 'created_by',
             'foreign' => 'id'));

        $this->hasOne('User as UpdatedBy', array(
             'local' => 'updated_by',
             'foreign' => 'id'));

        $this->hasOne('Post as Parent', array(
             'local' => 'parent_id',
             'foreign' => 'id'));

        $this->hasMany('PostCategory as Categories', array(
             'refClass' => 'PostCategories',
             'local' => 'post_id',
             'foreign' => 'category_id'));

        $this->hasMany('Post', array(
             'local' => 'id',
             'foreign' => 'parent_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $i18n0 = new Doctrine_Template_I18n(array(
             'fields' => 
             array(
              0 => 'title',
              1 => 'content',
              2 => 'excerpt',
             ),
             ));
        $sluggable1 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'title',
             ),
             ));
        $i18n0->addChild($sluggable1);
        $this->actAs($timestampable0);
        $this->actAs($i18n0);
    }
}