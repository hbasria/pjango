<?php

/**
 * BaseUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $username
 * @property string $displayname
 * @property string $email
 * @property string $password
 * @property boolean $is_staff
 * @property boolean $is_active
 * @property boolean $is_superuser
 * @property timestamp $last_login
 * @property date $date_joined
 * @property integer $contact_id
 * @property Contact $Contact
 * @property Doctrine_Collection $Post
 * @property Doctrine_Collection $Comment
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUser extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('user');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('username', 'string', 35, array(
             'type' => 'string',
             'unique' => true,
             'length' => '35',
             ));
        $this->hasColumn('displayname', 'string', 35, array(
             'type' => 'string',
             'length' => '35',
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'email' => true,
             'length' => '255',
             ));
        $this->hasColumn('password', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('is_staff', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('is_superuser', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('last_login', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('date_joined', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('contact_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Contact', array(
             'local' => 'contact_id',
             'foreign' => 'id'));

        $this->hasMany('Post', array(
             'local' => 'id',
             'foreign' => 'author_id'));

        $this->hasMany('Comment', array(
             'local' => 'id',
             'foreign' => 'user_id'));
    }
}