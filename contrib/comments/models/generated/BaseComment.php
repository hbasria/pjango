<?php

/**
 * BaseComment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $comment
 * @property timestamp $submit_date
 * @property string $ip_address
 * @property boolean $is_public
 * @property integer $user_id
 * @property integer $content_type_id
 * @property integer $object_pk
 * @property User $User
 * @property ContentType $ContentType
 * @property Doctrine_Collection $CommentMeta
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseComment extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('comment');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('comment', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('submit_date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('ip_address', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('is_public', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('content_type_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('object_pk', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('ContentType', array(
             'local' => 'content_type_id',
             'foreign' => 'id'));

        $this->hasMany('CommentMeta', array(
             'local' => 'id',
             'foreign' => 'comment_id'));
    }
}