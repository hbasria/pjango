<?php

/**
 * Post
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Post extends BasePost
{
	const TYPE_POST = "post";
	const TYPE_PAGE = "page";
	
	const STATUS_DRAFT = 'draft';
	const STATUS_PUBLISHED = 'published';
	const STATUS_PRIVATE = 'private';
	const STATUS_ARCHIVE = 'archive';
	
	public static function getStatusChoices() {
		$choices = array(
		self::STATUS_DRAFT=>pjango_gettext("post.status.draft"),
		self::STATUS_PUBLISHED=>pjango_gettext("post.status.published"),
		self::STATUS_PRIVATE=>pjango_gettext("post.status.private"),
		self::STATUS_ARCHIVE=>pjango_gettext("post.status.archive"));
	
		return $choices;
	}	
	
	public static function findBySlug($slug) {

		$p = Doctrine_Query::create()
			->from('Post o')
			->leftJoin('o.Translation t')
			->where('t.slug = ?',array($slug))
			->fetchOne();
		
		if($p){
			return Doctrine::getTable('Post')->find($p->id);
		}else {
			return false;
		}
	}	
	
	public function get_absolute_url() {
		$siteUrl = pjango_ini_get('SITE_URL');
		return sprintf('%s/%s/%s', $siteUrl, $this->post_type, $this->get_slug());
	}	
	
	public function get_ajax_url() {
	    $siteUrl = pjango_ini_get('SITE_URL');
	    return sprintf('%s/ajax/%s/%s', $siteUrl, $this->post_type, $this->get_slug());
	}	
	
	function get_title() {
		return  $this->Translation[pjango_ini_get('LANGUAGE_CODE')]->title;		
	}
	
	function get_slug() {
		return  $this->Translation[pjango_ini_get('LANGUAGE_CODE')]->slug;
	}	
	
	function get_content() {
		return  $this->Translation[pjango_ini_get('LANGUAGE_CODE')]->content;		
	}	
	
	function get_excerpt() {
		return  $this->Translation[pjango_ini_get('LANGUAGE_CODE')]->excerpt;
	}	
	
	public function get_image() {
	    $contentType = ContentType::get_for_model(get_class($this));
	    $metaData = PjangoMeta::getMeta($contentType->id, $this->id, 'meta_image');
	    
	    if($metaData && strlen($metaData->meta_value)>0){
	        $image = preg_replace('/(.*?)media\/uploads/i', '/media/uploads', $metaData->meta_value);
	        return $image;
	    }
	    
		return pjango_ini_get('ADMIN_MEDIA_URL').'/img/no-image.jpg';
	}	
	
	public function get_images() {
	    $contentType = ContentType::get_for_model('Post');
	
	    return Doctrine_Query::create()
	    ->from('PjangoImage o')
	    ->where('o.content_type_id = ? AND o.object_id = ?', array($contentType->id, $this->id))
	    ->execute();
	}
	
	public function get_images_count() {
	    $images = $this->get_images();
	    
	    if($images) return count($images);
	    else return 0;
	}	
	
	function get_category_names() {
		$retValArr = array();
		foreach ($this->Categories as $categoryItem) {
			$retValArr[] = $categoryItem->get_name();
		}
		
		return  implode(', ', $retValArr);
	}	
	
	function get_category_slugs() {
	    $retValArr = array();
	    foreach ($this->Categories as $categoryItem) {
	        $retValArr[] = $categoryItem->get_slug();
	    }
	
	    return  implode(' ', $retValArr);
	}	
	
	
	public function fromMyArray($arr = array()){
		$lng = pjango_ini_get('LANGUAGE_CODE');

		$arr['Translation'][$lng]['id'] = $this->id;
		if(isset($arr['title'])) $arr['Translation'][$lng]['title'] = $arr['title'];
		if(isset($arr['content'])) $arr['Translation'][$lng]['content'] = $arr['content'];
		if(isset($arr['excerpt'])) $arr['Translation'][$lng]['excerpt'] = $arr['excerpt'];
		if(isset($arr['slug'])) $arr['Translation'][$lng]['slug'] = $arr['slug'];
		
		$this->fromArray($arr);		
		return $arr;
	}
	
	public function toMyArray(){
		$lng = pjango_ini_get('LANGUAGE_CODE');
	
		$retVal = $this->toArray();
		$retVal['title'] = $this->Translation[$lng]->title;
		$retVal['content'] = $this->Translation[$lng]->content;
		$retVal['excerpt'] = $this->Translation[$lng]->excerpt;
		$retVal['slug'] = $this->Translation[$lng]->slug;
		return $retVal;
	}	
}